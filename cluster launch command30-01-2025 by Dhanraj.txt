login as: ec2-user
Authenticating with public key "ehs"
   ,     #_
   ~\_  ####_        Amazon Linux 2023
  ~~  \_#####\
  ~~     \###|
  ~~       \#/ ___   https://aws.amazon.com/linux/amazon-linux-2023
   ~~       V~' '->
    ~~~         /
      ~~._.   _/
         _/ _/
       _/m/'
Last login: Fri Feb 28 07:32:22 2025 from 49.43.160.194
[ec2-user@ip-172-31-25-198 ~]$ curl http://169.254.169.254/latest/meta-data/iam/                                                                                        security-credentials/
[ec2-user@ip-172-31-25-198 ~]$ eksctl create cluster --name my-cluster \
   --region ap-south-1 \
   --node-type t3.micro
2025-02-28 07:46:13 [ℹ]  eksctl version 0.204.0
2025-02-28 07:46:13 [ℹ]  using region ap-south-1
2025-02-28 07:46:14 [ℹ]  setting availability zones to [ap-south-1c ap-south-1a ap-south-1b]
2025-02-28 07:46:14 [ℹ]  subnets for ap-south-1c - public:192.168.0.0/19 private:192.168.96.0/19
2025-02-28 07:46:14 [ℹ]  subnets for ap-south-1a - public:192.168.32.0/19 private:192.168.128.0/19
2025-02-28 07:46:14 [ℹ]  subnets for ap-south-1b - public:192.168.64.0/19 private:192.168.160.0/19
2025-02-28 07:46:14 [ℹ]  nodegroup "ng-3539e77d" will use "" [AmazonLinux2/1.30]
2025-02-28 07:46:14 [ℹ]  using Kubernetes version 1.30
2025-02-28 07:46:14 [ℹ]  creating EKS cluster "my-cluster" in "ap-south-1" region with managed nodes
2025-02-28 07:46:14 [ℹ]  will create 2 separate CloudFormation stacks for cluster itself and the initial managed nodegroup
2025-02-28 07:46:14 [ℹ]  if you encounter any issues, check CloudFormation console or try 'eksctl utils describe-stacks --region=ap-south-1 --cluster=my-cluster'
2025-02-28 07:46:14 [ℹ]  Kubernetes API endpoint access will use default of {publicAccess=true, privateAccess=false} for cluster "my-cluster" in "ap-south-1"
2025-02-28 07:46:14 [ℹ]  CloudWatch logging will not be enabled for cluster "my-cluster" in "ap-south-1"
2025-02-28 07:46:14 [ℹ]  you can enable it with 'eksctl utils update-cluster-logging --enable-types={SPECIFY-YOUR-LOG-TYPES-HERE (e.g. all)} --region=ap-south-1 --cluster=my-cluster'
2025-02-28 07:46:14 [ℹ]  default addons metrics-server, vpc-cni, kube-proxy, coredns were not specified, will install them as EKS addons
2025-02-28 07:46:14 [ℹ]
2 sequential tasks: { create cluster control plane "my-cluster",
    2 sequential sub-tasks: {
        2 sequential sub-tasks: {
            1 task: { create addons },
            wait for control plane to become ready,
        },
        create managed nodegroup "ng-3539e77d",
    }
}
2025-02-28 07:46:14 [ℹ]  building cluster stack "eksctl-my-cluster-cluster"
2025-02-28 07:46:15 [ℹ]  deploying stack "eksctl-my-cluster-cluster"
2025-02-28 07:46:45 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-cluster"
2025-02-28 07:47:16 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-cluster"
2025-02-28 07:48:16 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-cluster"
2025-02-28 07:49:17 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-cluster"
2025-02-28 07:50:18 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-cluster"
2025-02-28 07:51:18 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-cluster"
2025-02-28 07:52:19 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-cluster"
2025-02-28 07:53:20 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-cluster"
2025-02-28 07:54:20 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-cluster"
2025-02-28 07:54:23 [ℹ]  creating addon: metrics-server
2025-02-28 07:54:24 [ℹ]  successfully created addon: metrics-server
2025-02-28 07:54:24 [!]  recommended policies were found for "vpc-cni" addon, but since OIDC is disabled on the cluster, eksctl cannot configure the requested permissions; the recommended way to provide IAM permissions for "vpc-cni" addon is via pod identity associations; after addon creation is completed, add all recommended policies to the config file, under `addon.PodIdentityAssociations`, and run `eksctl update addon`
2025-02-28 07:54:24 [ℹ]  creating addon: vpc-cni
2025-02-28 07:54:25 [ℹ]  successfully created addon: vpc-cni
2025-02-28 07:54:25 [ℹ]  creating addon: kube-proxy
2025-02-28 07:54:26 [ℹ]  successfully created addon: kube-proxy
2025-02-28 07:54:26 [ℹ]  creating addon: coredns
2025-02-28 07:54:27 [ℹ]  successfully created addon: coredns
2025-02-28 07:56:30 [ℹ]  building managed nodegroup stack "eksctl-my-cluster-nodegroup-ng-3539e77d"
2025-02-28 07:56:31 [ℹ]  deploying stack "eksctl-my-cluster-nodegroup-ng-3539e77d"
2025-02-28 07:56:31 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-nodegroup-ng-3539e77d"
2025-02-28 07:57:01 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-nodegroup-ng-3539e77d"
2025-02-28 07:57:51 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-nodegroup-ng-3539e77d"
2025-02-28 07:59:01 [ℹ]  waiting for CloudFormation stack "eksctl-my-cluster-nodegroup-ng-3539e77d"
2025-02-28 07:59:01 [ℹ]  waiting for the control plane to become ready
2025-02-28 07:59:02 [✔]  saved kubeconfig as "/home/ec2-user/.kube/config"
2025-02-28 07:59:02 [ℹ]  no tasks
2025-02-28 07:59:02 [✔]  all EKS cluster resources for "my-cluster" have been created
2025-02-28 07:59:02 [ℹ]  nodegroup "ng-3539e77d" has 2 node(s)
2025-02-28 07:59:02 [ℹ]  node "ip-192-168-32-137.ap-south-1.compute.internal" is ready
2025-02-28 07:59:02 [ℹ]  node "ip-192-168-7-220.ap-south-1.compute.internal" is ready
2025-02-28 07:59:02 [ℹ]  waiting for at least 2 node(s) to become ready in "ng-3539e77d"
2025-02-28 07:59:03 [ℹ]  nodegroup "ng-3539e77d" has 2 node(s)
2025-02-28 07:59:03 [ℹ]  node "ip-192-168-32-137.ap-south-1.compute.internal" is ready
2025-02-28 07:59:03 [ℹ]  node "ip-192-168-7-220.ap-south-1.compute.internal" is ready
2025-02-28 07:59:03 [✔]  created 1 managed nodegroup(s) in cluster "my-cluster"
2025-02-28 07:59:04 [ℹ]  kubectl command should work with "/home/ec2-user/.kube/config", try 'kubectl get nodes'
2025-02-28 07:59:04 [✔]  EKS cluster "my-cluster" in "ap-south-1" region is ready
[ec2-user@ip-172-31-25-198 ~]$ kubectl get nodes
NAME                                            STATUS   ROLES    AGE     VERSION
ip-192-168-32-137.ap-south-1.compute.internal   Ready    <none>   2m51s   v1.30.9-eks-5d632ec
ip-192-168-7-220.ap-south-1.compute.internal    Ready    <none>   2m51s   v1.30.9-eks-5d632ec
[ec2-user@ip-172-31-25-198 ~]$ aws eks describe-cluster --name my-cluster --query "cluster.status"

An error occurred (ResourceNotFoundException) when calling the DescribeCluster operation: No cluster found for name: my-cluster.
[ec2-user@ip-172-31-25-198 ~]$ kubectl run tomcat --image=tomcat
pod/tomcat created
[ec2-user@ip-172-31-25-198 ~]$ kubectl create deployment demo-nginx --image=nginx --replicas=2 --port=80
deployment.apps/demo-nginx created
[ec2-user@ip-172-31-25-198 ~]$ kubectl get all
NAME                              READY   STATUS    RESTARTS   AGE
pod/demo-nginx-57d74cc7bf-dvt5p   0/1     Pending   0          15s
pod/demo-nginx-57d74cc7bf-vc9ct   0/1     Pending   0          15s
pod/tomcat                        0/1     Pending   0          41s

NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.100.0.1   <none>        443/TCP   12m

NAME                         READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/demo-nginx   0/2     2            0           17s

NAME                                    DESIRED   CURRENT   READY   AGE
replicaset.apps/demo-nginx-57d74cc7bf   2         2         0       17s
[ec2-user@ip-172-31-25-198 ~]$ kubectl get pod
NAME                          READY   STATUS    RESTARTS   AGE
demo-nginx-57d74cc7bf-dvt5p   0/1     Pending   0          44s
demo-nginx-57d74cc7bf-vc9ct   0/1     Pending   0          44s
tomcat                        0/1     Pending   0          70s
[ec2-user@ip-172-31-25-198 ~]$ kubectl expose deployment demo-nginx --port=80 --type=LoadBalancer
service/demo-nginx exposed
[ec2-user@ip-172-31-25-198 ~]$ kubectl get services -o wide
NAME         TYPE           CLUSTER-IP       EXTERNAL-IP                                                               PORT(S)        AGE   SELECTOR
demo-nginx   LoadBalancer   10.100.109.187   abf7b4f78f5244a58ab939b399d75167-246319739.ap-south-1.elb.amazonaws.com   80:30869/TCP   16s   app=demo-nginx
kubernetes   ClusterIP      10.100.0.1       <none> 